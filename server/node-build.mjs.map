{"version":3,"file":"node-build.mjs","sources":["../../server/routes/demo.ts","../../server/routes/resume.ts","../../server/routes/contact.ts","../../server/index.ts","../../server/node-build.ts"],"sourcesContent":["import { RequestHandler } from \"express\";\nimport { DemoResponse } from \"@shared/api\";\n\nexport const handleDemo: RequestHandler = (req, res) => {\n  const response: DemoResponse = {\n    message: \"Hello from Express server\",\n  };\n  res.status(200).json(response);\n};\n","import { RequestHandler } from \"express\";\nimport path from \"path\";\nimport fs from \"fs\";\n\nexport const handleResumeDownload: RequestHandler = (req, res) => {\n  console.log(\n    \"📄 Resume download requested from:\",\n    req.ip || req.connection.remoteAddress,\n  );\n\n  try {\n    // Path to the resume file in the public directory\n    const resumePath = path.join(\n      process.cwd(),\n      \"public\",\n      \"Resume 2025.pdf\",\n    );\n\n    console.log(\"📂 Looking for resume at:\", resumePath);\n\n    // Check if file exists\n    if (!fs.existsSync(resumePath)) {\n      console.log(\"❌ Resume file not found at:\", resumePath);\n      return res.status(404).json({\n        error: \"Resume file not found\",\n        message:\n          \"The resume file is currently unavailable. Please contact me directly.\",\n      });\n    }\n\n    // Get file stats for content length\n    const stat = fs.statSync(resumePath);\n\n    // Set appropriate headers for PDF download\n    res.setHeader(\"Content-Type\", \"application/pdf\");\n    res.setHeader(\n      \"Content-Disposition\",\n      \"attachment; filename=Resume 2025.pdf\",\n    );\n    res.setHeader(\"Content-Length\", stat.size);\n    res.setHeader(\"Cache-Control\", \"no-cache\");\n\n    console.log(\"✅ Resume file found, initiating download\");\n\n    // Create read stream and pipe to response\n    const fileStream = fs.createReadStream(resumePath);\n\n    fileStream.on(\"error\", (error) => {\n      console.error(\"❌ Error reading resume file:\", error);\n      if (!res.headersSent) {\n        res.status(500).json({\n          error: \"Failed to read resume file\",\n          message:\n            \"There was an error accessing the resume. Please try again later.\",\n        });\n      }\n    });\n\n    fileStream.on(\"end\", () => {\n      console.log(\"✅ Resume download completed successfully\");\n    });\n\n    fileStream.pipe(res);\n  } catch (error) {\n    console.error(\"Resume download error:\", error);\n    res.status(500).json({\n      error: \"Internal server error\",\n      message: \"Unable to process resume download request.\",\n    });\n  }\n};\n\nexport const handleResumeInfo: RequestHandler = (req, res) => {\n  try {\n    const resumePath = path.join(\n      process.cwd(),\n      \"public\",\n      \"Soumik_Basu_Resume.pdf\",\n    );\n    const exists = fs.existsSync(resumePath);\n\n    if (exists) {\n      const stat = fs.statSync(resumePath);\n      res.json({\n        available: true,\n        filename: \"Soumik_Basu_Resume.pdf\",\n        size: stat.size,\n        lastModified: stat.mtime,\n        downloadUrl: \"/api/resume/download\",\n      });\n    } else {\n      res.json({\n        available: false,\n        message: \"Resume is currently being updated. Please check back soon.\",\n      });\n    }\n  } catch (error) {\n    console.error(\"Resume info error:\", error);\n    res.status(500).json({\n      error: \"Unable to get resume information\",\n    });\n  }\n};\n","import { RequestHandler } from \"express\";\r\nimport mongoose, { Schema, model } from \"mongoose\";\r\n\r\n// Define the contact message schema\r\nconst contactSchema = new Schema({\r\n  name: { type: String, required: true },\r\n  email: { type: String, required: true },\r\n  message: { type: String, required: true },\r\n  createdAt: { type: Date, default: Date.now },\r\n});\r\n\r\nconst ContactMessage = mongoose.models.ContactMessage || model(\"ContactMessage\", contactSchema);\r\n\r\n// POST /api/contact - Submit a new contact message\r\nexport const handleContactSubmit: RequestHandler = async (req, res) => {\r\n  try {\r\n    const { name, email, message } = req.body;\r\n    \r\n    // Validation\r\n    if (!name || !email || !message) {\r\n      return res.status(400).json({ error: \"All fields are required.\" });\r\n    }\r\n    \r\n    if (name.trim().length < 2) {\r\n      return res.status(400).json({ error: \"Name must be at least 2 characters long.\" });\r\n    }\r\n    \r\n    if (message.trim().length < 10) {\r\n      return res.status(400).json({ error: \"Message must be at least 10 characters long.\" });\r\n    }\r\n    \r\n    // Basic email validation\r\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n    if (!emailRegex.test(email)) {\r\n      return res.status(400).json({ error: \"Please enter a valid email address.\" });\r\n    }\r\n    \r\n    const newMessage = new ContactMessage({ \r\n      name: name.trim(), \r\n      email: email.trim(), \r\n      message: message.trim() \r\n    });\r\n    \r\n    await newMessage.save();\r\n    res.status(201).json({ success: true, message: \"Message sent successfully.\" });\r\n  } catch (error) {\r\n    console.error(\"Contact form submission error:\", error);\r\n    res.status(500).json({ error: \"Failed to send message. Please try again later.\" });\r\n  }\r\n};\r\n\r\n// GET /api/contact - Get all contact messages (for admin purposes)\r\nexport const getContactMessages: RequestHandler = async (req, res) => {\r\n  try {\r\n    const messages = await ContactMessage.find()\r\n      .sort({ createdAt: -1 })\r\n      .limit(100); // Limit to prevent overwhelming response\r\n    \r\n    res.status(200).json({ \r\n      success: true, \r\n      messages,\r\n      count: messages.length \r\n    });\r\n  } catch (error) {\r\n    console.error(\"Error fetching contact messages:\", error);\r\n    res.status(500).json({ error: \"Failed to fetch messages.\" });\r\n  }\r\n}; ","import express from \"express\";\nimport cors from \"cors\";\nimport { handleDemo } from \"./routes/demo\";\nimport { handleResumeDownload, handleResumeInfo } from \"./routes/resume\";\nimport { handleContactSubmit, getContactMessages } from \"./routes/contact\";\nimport mongoose from \"mongoose\";\n\nexport function createServer() {\n  // Connect to MongoDB\n  const mongoUri = process.env.MONGODB_URI || \"mongodb://localhost:27017/portfolio\";\n  mongoose.connect(mongoUri, { dbName: \"portfolio\" })\n    .then(() => console.log(\"✅ Connected to MongoDB\"))\n    .catch((err) => console.error(\"❌ MongoDB connection error:\", err));\n\n  const app = express();\n\n  // Middleware\n  app.use(cors());\n  app.use(express.json());\n  app.use(express.urlencoded({ extended: true }));\n\n  // Example API routes\n  app.get(\"/api/ping\", (_req, res) => {\n    res.json({ message: \"Hello from Express server v2!\" });\n  });\n\n  app.get(\"/api/demo\", handleDemo);\n  app.get(\"/api/resume/download\", handleResumeDownload);\n  app.get(\"/api/resume/info\", handleResumeInfo);\n  app.post(\"/api/contact\", handleContactSubmit);\n  app.get(\"/api/contact\", getContactMessages);\n\n  return app;\n}\n","import path from \"path\";\nimport { createServer } from \"./index\";\nimport * as express from \"express\";\n\nconst app = createServer();\nconst port = process.env.PORT || 3000;\n\n// In production, serve the built SPA files\nconst __dirname = import.meta.dirname;\nconst distPath = path.join(__dirname, \"../spa\");\n\n// Serve static files\napp.use(express.static(distPath));\n\n// Handle React Router - serve index.html for all non-API routes\napp.get(\"*\", (req, res) => {\n  // Don't serve index.html for API routes\n  if (req.path.startsWith(\"/api/\") || req.path.startsWith(\"/health\")) {\n    return res.status(404).json({ error: \"API endpoint not found\" });\n  }\n\n  res.sendFile(path.join(distPath, \"index.html\"));\n});\n\napp.listen(port, () => {\n  console.log(`🚀 Fusion Starter server running on port ${port}`);\n  console.log(`📱 Frontend: http://localhost:${port}`);\n  console.log(`🔧 API: http://localhost:${port}/api`);\n});\n\n// Graceful shutdown\nprocess.on(\"SIGTERM\", () => {\n  console.log(\"🛑 Received SIGTERM, shutting down gracefully\");\n  process.exit(0);\n});\n\nprocess.on(\"SIGINT\", () => {\n  console.log(\"🛑 Received SIGINT, shutting down gracefully\");\n  process.exit(0);\n});\n"],"names":["app","express"],"mappings":"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"}